name: ğŸ§ª Integration

on: 
  pull_request:
    branches: 
      - main
      - development
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  integration: 
    runs-on: ubuntu-22.04

    steps:
      - name: ğŸ“¥ Checkout
        uses: actions/checkout@v3

      - name: ğŸ›« Golang setup
        uses: actions/setup-go@v3
        with:
          go-version: "1.19.x"

      - name: ğŸ’… Check formatting
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
      
      - name: ğŸ“¦ Build binary
        run: |
          cd api
          go build -o loomies

      - name: ğŸ›« Setup environment
        run: |
          cd api
          docker-compose up -d
          cp .env.example .env
          echo "EMAIL_MAIL" = ${{ secrets.EMAIL_MAIL }} >> .env
          echo "EMAIL_PASSWORD" = ${{ secrets.EMAIL_PASSWORD }} >> .env

      - name: ğŸ’¾ Insert data
        run: |
          cd algorithms/database
          echo "MONGO_URI = mongodb://root:development@127.0.0.1:27017" >> .env
          npm install
          npm run bulk 
          npm run update:rewards

      - name: ğŸ§ª Run tests
        run: |
          cd api
          cp .env controllers/.env
          go test ./...